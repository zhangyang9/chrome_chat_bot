{"version":3,"file":"background.js","mappings":"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","sources":["webpack://tongcheng-ai-assistant/./src/background/background.js"],"sourcesContent":["// 定义 Logger\nconst Logger = {\n  error: (...args) => {\n    console.error('[ERROR]', new Date().toISOString(), ...args);\n    // 可选：错误记录到存储或发送到服务器\n  },\n  \n  info: (...args) => {\n    console.info('[INFO]', new Date().toISOString(), ...args);\n  },\n  \n  warn: (...args) => {\n    console.warn('[WARN]', new Date().toISOString(), ...args);\n  },\n  \n  debug: (...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.debug('[DEBUG]', new Date().toISOString(), ...args);\n    }\n  },\n  \n  // 格式化对象\n  formatError: (error) => ({\n    message: error.message,\n    stack: error.stack,\n    name: error.name,\n    timestamp: new Date().toISOString()\n  }),\n  \n  // 分组日志\n  group: (label, callback) => {\n    console.group(`[GROUP] ${label}`);\n    try {\n      callback();\n    } finally {\n      console.groupEnd();\n    }\n  },\n  \n  // 性能计时\n  time: (label) => {\n    console.time(`[TIMER] ${label}`);\n  },\n  \n  timeEnd: (label) => {\n    console.timeEnd(`[TIMER] ${label}`);\n  }\n};\n\n// 防止生产环境打印调试信息\nif (process.env.NODE_ENV === 'production') {\n  Logger.debug = () => {};\n}\n\n// 等待 Service Worker 激活\nself.addEventListener('activate', () => {\n  Logger.info('Service Worker 激活');\n});\n\n// 等待 Service Worker 安装\nself.addEventListener('install', () => {\n  Logger.info('Service Worker 安装');\n  self.skipWaiting();\n});\n\n// 检查 content script 是否已加载\nasync function checkContentScript(tabId) {\n  try {\n    const response = await chrome.tabs.sendMessage(tabId, { action: 'ping' });\n    Logger.info('Content script 检查结果', response);\n    return response && response.status === 'ok';\n  } catch (error) {\n    Logger.info('Content script 未加载', error);\n    return false;\n  }\n}\n\n// 确保在 chrome API 可用时再注册监听器\nasync function registerListeners() {\n  try {\n    Logger.info('开始注册监听器');\n    \n    // 更严格的 API 检查\n    const chrome = globalThis.chrome;\n    if (!chrome) {\n      throw new Error('Chrome API 未定义');\n    }\n\n    // 等待 Chrome API 初始化\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // 直接获取需要使用的 API 引用\n    const { action, runtime, tabs, scripting } = chrome;\n    \n    // 更详细的 API 检查\n    if (!action?.onClicked?.addListener) {\n      throw new Error(`chrome.action.onClicked.addListener 不可用: ${JSON.stringify({\n        action: !!action,\n        onClicked: !!action?.onClicked,\n        addListener: !!action?.onClicked?.addListener\n      })}`);\n    }\n\n    // 保存引用以确保稳定性\n    const onClicked = action.onClicked;\n    \n    // 使用保存的引用注册监听器\n    onClicked.addListener(async (tab) => {\n      Logger.info('扩展图标被点击', { tabId: tab?.id });\n      if (!tab.id) {\n        Logger.error('无效的标签页ID');\n        return;\n      }\n      \n      try {\n        // 使用之前保存的 API 引用\n        const isLoaded = await checkContentScript(tab.id);\n        Logger.info('Content script 状态检查', { isLoaded });\n        \n        if (!isLoaded) {\n          await scripting.executeScript({\n            target: { tabId: tab.id },\n            files: ['src/content/content.js']\n          });\n          Logger.info('Content script 注入成功');\n        }\n        \n        await tabs.sendMessage(tab.id, { action: 'toggleChatBox' });\n        Logger.info('切换对话框消息发送成功');\n      } catch (error) {\n        Logger.error('处理点击事件失败', error);\n      }\n    });\n\n    Logger.info('监听器注册成功');\n  } catch (error) {\n    Logger.error('注册监听器失败', {\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n      chromeExists: typeof chrome !== 'undefined',\n      actionExists: typeof chrome?.action !== 'undefined'\n    });\n    throw error;\n  }\n}\n\n// 确保在 Service Worker 环境中\nif ('serviceWorker' in navigator) {\n  self.addEventListener('activate', async (event) => {\n    Logger.info('Service Worker 激活开始');\n    try {\n      await registerListeners();\n      Logger.info('Service Worker 激活完成，监听器注册成功');\n    } catch (error) {\n      Logger.error('Service Worker 激活过程中出错', {\n        phase: 'activate',\n        error: Logger.formatError(error)\n      });\n    }\n  });\n}\n\n// 导出 Logger\nexport default Logger; "],"names":["Logger","error","args","console","Date","toISOString","info","warn","debug","process","env","NODE_ENV","formatError","message","stack","name","timestamp","group","label","callback","groupEnd","time","timeEnd","self","addEventListener","skipWaiting","checkContentScript","tabId","response","chrome","tabs","sendMessage","action","status","registerListeners","_action$onClicked","globalThis","Error","Promise","resolve","setTimeout","runtime","scripting","onClicked","addListener","_action$onClicked2","JSON","stringify","tab","id","isLoaded","executeScript","target","files","_chrome","chromeExists","actionExists","navigator","event","phase"],"sourceRoot":""}